<?xml version="1.0" encoding="utf-8"?>
<CudafyModule Version="1.29.5576.13786" Name="CUDAFloat" DebugInfo="false" HasCudaSourceCode="false" HasPTX="false" HasBinary="false">
  <CudaSourceCode></CudaSourceCode>
  <PTXMODULES />
  <BinaryModules />
  <SourceCodes>
    <SourceCodeFile ID="9624a0a2-e654-4ad7-9146-d6420dbf14b3" Language="Cuda" Arch="Unknown">I2lmIGRlZmluZWQoY2xfa2hyX2ZwNjQpDQojcHJhZ21hIE9QRU5DTCBFWFRFTlNJT04gY2xfa2hyX2ZwNjQ6IGVuYWJsZQ0KI2VsaWYgZGVmaW5lZChjbF9hbWRfZnA2NCkNCiNwcmFnbWEgT1BFTkNMIEVYVEVOU0lPTiBjbF9hbWRfZnA2NDogZW5hYmxlDQojZW5kaWYNCnN0cnVjdCBCb2R5DQp7DQoJZmxvYXQgTG9jWDsNCglmbG9hdCBMb2NZOw0KCWZsb2F0IE1hc3M7DQoJZmxvYXQgU3BlZWRYOw0KCWZsb2F0IFNwZWVkWTsNCglmbG9hdCBGb3JjZVg7DQoJZmxvYXQgRm9yY2VZOw0KCWZsb2F0IEZvcmNlVG90Ow0KCWludCBDb2xvcjsNCglmbG9hdCBTaXplOw0KCWludCBWaXNpYmxlOw0KCWludCBJblJvY2hlOw0KCWludCBCbGFja0hvbGU7DQoJaW50IFVJRDsNCglmbG9hdCBEZW5zaXR5Ow0KCWZsb2F0IFByZXNzdXJlOw0KfTsNCg0KDQovLyBOQm9kaWVzLlBoeXNpY3MuQ1VEQUZsb2F0DQpfX2tlcm5lbCAgdm9pZCBDYWxjRm9yY2UoZ2xvYmFsIHN0cnVjdCBCb2R5KiBpbkJvZGllcywgaW50IGluQm9kaWVzTGVuMCwgZ2xvYmFsIHN0cnVjdCBCb2R5KiBvdXRCb2RpZXMsIGludCBvdXRCb2RpZXNMZW4wLCBmbG9hdCBkdCk7DQovLyBOQm9kaWVzLlBoeXNpY3MuQ1VEQUZsb2F0DQpfX2tlcm5lbCAgdm9pZCBDYWxjQ29sbGlzaW9ucyhnbG9iYWwgc3RydWN0IEJvZHkqIGluQm9kaWVzLCBpbnQgaW5Cb2RpZXNMZW4wLCBnbG9iYWwgc3RydWN0IEJvZHkqIG91dEJvZGllcywgaW50IG91dEJvZGllc0xlbjAsIGZsb2F0IGR0LCBmbG9hdCB2aXNjb3NpdHkpOw0KLy8gTkJvZGllcy5QaHlzaWNzLkNVREFGbG9hdA0KICBzdHJ1Y3QgQm9keSBDb2xsaWRlQm9kaWVzKHN0cnVjdCBCb2R5IG1hc3Rlciwgc3RydWN0IEJvZHkgc2xhdmUsIGZsb2F0IGRWLCBmbG9hdCB2ZWNYLCBmbG9hdCB2ZWNZKTsNCg0KLy8gTkJvZGllcy5QaHlzaWNzLkNVREFGbG9hdA0KX19rZXJuZWwgIHZvaWQgQ2FsY0ZvcmNlKGdsb2JhbCBzdHJ1Y3QgQm9keSogaW5Cb2RpZXMsIGludCBpbkJvZGllc0xlbjAsIGdsb2JhbCBzdHJ1Y3QgQm9keSogb3V0Qm9kaWVzLCBpbnQgb3V0Qm9kaWVzTGVuMCwgZmxvYXQgZHQpDQp7DQoJZmxvYXQgbnVtID0gMC44ZjsNCglmbG9hdCBudW0yID0gMS4xOTIwOTNFLTA3ZjsNCglmbG9hdCBudW0zID0gMC4wZjsNCglmbG9hdCBudW00ID0gMC4wZjsNCglkb3VibGUgbnVtNSA9IDAuMDsNCglpbnQgbnVtNiA9IGdldF9nbG9iYWxfaWQoMCk7DQoJaW50IG51bTcgPSBnZXRfbG9jYWxfaWQoMCk7DQoJaW50IG51bTggPSBnZXRfZ2xvYmFsX3NpemUoMCk7DQoJaW50IG51bTkgPSBnZXRfbG9jYWxfc2l6ZSgwKTsNCglpbnQgbnVtMTAgPSBudW04IC8gbnVtOTsNCglzdHJ1Y3QgQm9keSBib2R5ID0gaW5Cb2RpZXNbKG51bTYpXTsNCglib2R5LkZvcmNlVG90ID0gMC4wZjsNCglib2R5LkZvcmNlWCA9IDAuMGY7DQoJYm9keS5Gb3JjZVkgPSAwLjBmOw0KCWJvZHkuRGVuc2l0eSA9IDAuMGY7DQoJYm9keS5QcmVzc3VyZSA9IDAuMGY7DQoJX19sb2NhbCBzdHJ1Y3QgQm9keSBhcnJheVsyNTZdOw0KDQoJaW50IGFycmF5TGVuMCA9IDI1NjsNCglmb3IgKGludCBpID0gMDsgaSA8IG51bTEwOyBpKyspDQoJew0KCQlhcnJheVsobnVtNyldID0gaW5Cb2RpZXNbKGkgKiBudW05ICsgbnVtNyldOw0KCQliYXJyaWVyKENMS19MT0NBTF9NRU1fRkVOQ0UpOw0KCQlmb3IgKGludCBqID0gMDsgaiA8IG51bTk7IGorKykNCgkJew0KCQkJc3RydWN0IEJvZHkgYm9keTIgPSBhcnJheVsoaildOw0KCQkJZmxvYXQgbnVtMTEgPSBib2R5Mi5Mb2NYIC0gYm9keS5Mb2NYOw0KCQkJZmxvYXQgbnVtMTIgPSBib2R5Mi5Mb2NZIC0gYm9keS5Mb2NZOw0KCQkJZmxvYXQgbnVtMTMgPSBudW0xMSAqIG51bTExICsgbnVtMTIgKiBudW0xMjsNCgkJCWZsb2F0IG51bTE0ID0gKGZsb2F0KXNxcnQoKGRvdWJsZSludW0xMyk7DQoJCQlib29sIGZsYWcgPSBib2R5Mi5VSUQgIT0gYm9keS5VSUQ7DQoJCQlpZiAoZmxhZykNCgkJCXsNCgkJCQlib29sIGZsYWcyID0gbnVtMTQgPiAwLjBmOw0KCQkJCWlmIChmbGFnMikNCgkJCQl7DQoJCQkJCWZsb2F0IG51bTE1ID0gYm9keTIuTWFzcyAqIGJvZHkuTWFzczsNCgkJCQkJZmxvYXQgbnVtMTYgPSBudW0xNSAvIChudW0xNCAqIG51bTE0ICsgMC4yZik7DQoJCQkJCWJvZHkuRm9yY2VUb3QgKz0gbnVtMTY7DQoJCQkJCWJvZHkuRm9yY2VYICs9IG51bTE2ICogbnVtMTEgLyBudW0xNDsNCgkJCQkJYm9keS5Gb3JjZVkgKz0gbnVtMTYgKiBudW0xMiAvIG51bTE0Ow0KCQkJCX0NCgkJCX0NCgkJCWJvb2wgZmxhZzMgPSBib2R5Mi5JblJvY2hlID09IDEgJiYgYm9keTIuQmxhY2tIb2xlICE9IDE7DQoJCQlpZiAoZmxhZzMpDQoJCQl7DQoJCQkJYm9vbCBmbGFnNCA9IG51bTMgIT0gYm9keS5TaXplOw0KCQkJCWlmIChmbGFnNCkNCgkJCQl7DQoJCQkJCW51bTMgPSBib2R5LlNpemU7DQoJCQkJCW51bTQgPSBudW0zICogbnVtMzsNCgkJCQkJZG91YmxlIG51bTE3ID0gcG93KChkb3VibGUpbnVtMywgOS4wKTsNCgkJCQkJbnVtNSA9IChkb3VibGUpKChmbG9hdCkoMzE1LjAgLyAoMjAxLjA2MTkyOTgyOTc0NyAqIG51bTE3KSkpOw0KCQkJCX0NCgkJCQlib29sIGZsYWc1ID0gbnVtMTMgPD0gbnVtMzsNCgkJCQlpZiAoZmxhZzUpDQoJCQkJew0KCQkJCQlib29sIGZsYWc2ID0gbnVtMTMgPCBudW0yOw0KCQkJCQlpZiAoZmxhZzYpDQoJCQkJCXsNCgkJCQkJCW51bTEzID0gbnVtMjsNCgkJCQkJfQ0KCQkJCQlmbG9hdCBudW0xOCA9IG51bTQgLSBudW0xMzsNCgkJCQkJZG91YmxlIG51bTE5ID0gbnVtNSAqIChkb3VibGUpbnVtMTggKiAoZG91YmxlKW51bTE4ICogKGRvdWJsZSludW0xODsNCgkJCQkJYm9keS5EZW5zaXR5ICs9IChmbG9hdCkoKGRvdWJsZSlib2R5Lk1hc3MgKiBudW0xOSk7DQoJCQkJfQ0KCQkJfQ0KCQl9DQoJCWJhcnJpZXIoQ0xLX0xPQ0FMX01FTV9GRU5DRSk7DQoJfQ0KCWJvb2wgZmxhZzcgPSBib2R5LkRlbnNpdHkgPiAwLjBmOw0KCWlmIChmbGFnNykNCgl7DQoJCWJvZHkuUHJlc3N1cmUgPSBudW0gKiBib2R5LkRlbnNpdHk7DQoJfQ0KCWJvb2wgZmxhZzggPSBib2R5LkZvcmNlVG90ID4gYm9keS5NYXNzICogNC4wZiAmIGJvZHkuQmxhY2tIb2xlID09IDA7DQoJaWYgKGZsYWc4KQ0KCXsNCgkJYm9keS5JblJvY2hlID0gMTsNCgl9DQoJZWxzZQ0KCXsNCgkJYm9vbCBmbGFnOSA9IGJvZHkuRm9yY2VUb3QgKiAyLjBmIDwgYm9keS5NYXNzICogNC4wZjsNCgkJaWYgKGZsYWc5KQ0KCQl7DQoJCQlib2R5LkluUm9jaGUgPSAwOw0KCQl9DQoJCWVsc2UNCgkJew0KCQkJYm9vbCBmbGFnMTAgPSBib2R5LkJsYWNrSG9sZSA9PSAyOw0KCQkJaWYgKGZsYWcxMCkNCgkJCXsNCgkJCQlib2R5LkluUm9jaGUgPSAxOw0KCQkJfQ0KCQl9DQoJfQ0KCW91dEJvZGllc1sobnVtNildID0gYm9keTsNCn0NCi8vIE5Cb2RpZXMuUGh5c2ljcy5DVURBRmxvYXQNCl9fa2VybmVsICB2b2lkIENhbGNDb2xsaXNpb25zKGdsb2JhbCBzdHJ1Y3QgQm9keSogaW5Cb2RpZXMsIGludCBpbkJvZGllc0xlbjAsIGdsb2JhbCBzdHJ1Y3QgQm9keSogb3V0Qm9kaWVzLCBpbnQgb3V0Qm9kaWVzTGVuMCwgZmxvYXQgZHQsIGZsb2F0IHZpc2Nvc2l0eSkNCnsNCglpbnQgbnVtID0gZ2V0X2dsb2JhbF9pZCgwKTsNCglpbnQgbnVtMiA9IGdldF9sb2NhbF9pZCgwKTsNCglpbnQgbnVtMyA9IGdldF9nbG9iYWxfc2l6ZSgwKTsNCglpbnQgbnVtNCA9IGdldF9sb2NhbF9zaXplKDApOw0KCWludCBudW01ID0gbnVtMyAvIG51bTQ7DQoJc3RydWN0IEJvZHkgYm9keSA9IGluQm9kaWVzWyhudW0pXTsNCglfX2xvY2FsIHN0cnVjdCBCb2R5IGFycmF5WzI1Nl07DQoNCglpbnQgYXJyYXlMZW4wID0gMjU2Ow0KCWZsb2F0IG51bTYgPSAxLjE5MjA5M0UtMDdmOw0KCWZsb2F0IHNpemUgPSBib2R5LlNpemU7DQoJZG91YmxlIG51bTcgPSBwb3coKGRvdWJsZSkoc2l6ZSAvIDMuMGYpLCA2LjApOw0KCWZsb2F0IG51bTggPSAoZmxvYXQpKDE1LjAgLyAoMy4xNDE1OTI2NTM1ODk3OSAqIG51bTcpKTsNCglmbG9hdCBudW05ID0gc2l6ZSAqIHNpemU7DQoJZmxvYXQgbnVtMTAgPSAoZmxvYXQpcG93KChkb3VibGUpc2l6ZSwgMy4wKTsNCglmbG9hdCBudW0xMSA9IChmbG9hdCkoMTUuMCAvICg2LjI4MzE4NTMwNzE3OTU5ICogKGRvdWJsZSludW0xMCkpOw0KCWZvciAoaW50IGkgPSAwOyBpIDwgbnVtNTsgaSsrKQ0KCXsNCgkJYXJyYXlbKG51bTIpXSA9IGluQm9kaWVzWyhpICogbnVtNCArIG51bTIpXTsNCgkJYmFycmllcihDTEtfTE9DQUxfTUVNX0ZFTkNFKTsNCgkJYm9vbCBmbGFnID0gYm9keS5WaXNpYmxlID09IDE7DQoJCWlmIChmbGFnKQ0KCQl7DQoJCQlmb3IgKGludCBqID0gMDsgaiA8IG51bTQ7IGorKykNCgkJCXsNCgkJCQlzdHJ1Y3QgQm9keSBib2R5MiA9IGFycmF5WyhqKV07DQoJCQkJYm9vbCBmbGFnMiA9IGJvZHkyLlVJRCAhPSBib2R5LlVJRCAmJiBib2R5Mi5WaXNpYmxlID09IDE7DQoJCQkJaWYgKGZsYWcyKQ0KCQkJCXsNCgkJCQkJZmxvYXQgbnVtMTIgPSBib2R5Mi5Mb2NYIC0gYm9keS5Mb2NYOw0KCQkJCQlmbG9hdCBudW0xMyA9IGJvZHkyLkxvY1kgLSBib2R5LkxvY1k7DQoJCQkJCWZsb2F0IG51bTE0ID0gbnVtMTIgKiBudW0xMiArIG51bTEzICogbnVtMTM7DQoJCQkJCWZsb2F0IG51bTE1ID0gKGZsb2F0KXNxcnQoKGRvdWJsZSludW0xNCk7DQoJCQkJCWJvb2wgZmxhZzMgPSBudW0xNSA8PSBib2R5LlNpemUgKiAwLjVmICsgYm9keTIuU2l6ZSAqIDAuNWY7DQoJCQkJCWlmIChmbGFnMykNCgkJCQkJew0KCQkJCQkJYm9vbCBmbGFnNCA9IG51bTE1ID4gMC4wZjsNCgkJCQkJCWlmIChmbGFnNCkNCgkJCQkJCXsNCgkJCQkJCQlmbG9hdCBzcGVlZFggPSBib2R5LlNwZWVkWDsNCgkJCQkJCQlmbG9hdCBzcGVlZFkgPSBib2R5LlNwZWVkWTsNCgkJCQkJCQlmbG9hdCBzcGVlZFgyID0gYm9keTIuU3BlZWRYOw0KCQkJCQkJCWZsb2F0IHNwZWVkWTIgPSBib2R5Mi5TcGVlZFk7DQoJCQkJCQkJZmxvYXQgbWFzcyA9IGJvZHkuTWFzczsNCgkJCQkJCQlmbG9hdCBtYXNzMiA9IGJvZHkyLk1hc3M7DQoJCQkJCQkJZmxvYXQgbnVtMTYgPSBudW0xMiAqIDAuNWY7DQoJCQkJCQkJZmxvYXQgbnVtMTcgPSBudW0xMyAqIDAuNWY7DQoJCQkJCQkJbnVtMTYgLz0gbnVtMTUgKiAwLjVmOw0KCQkJCQkJCW51bTE3IC89IG51bTE1ICogMC41ZjsNCgkJCQkJCQlmbG9hdCBudW0xOCA9IG51bTE2ICogc3BlZWRYICsgbnVtMTcgKiBzcGVlZFk7DQoJCQkJCQkJZmxvYXQgbnVtMTkgPSBudW0xNiAqIHNwZWVkWDIgKyBudW0xNyAqIHNwZWVkWTI7DQoJCQkJCQkJZmxvYXQgbnVtMjAgPSAobWFzcyAqIG51bTE4ICsgbWFzczIgKiBudW0xOSAtIG1hc3MyICogKG51bTE4IC0gbnVtMTkpKSAvIChtYXNzICsgbWFzczIpOw0KCQkJCQkJCWZsb2F0IGRWID0gbnVtMjAgLSBudW0xODsNCgkJCQkJCQlib29sIGZsYWc1ID0gYm9keS5JblJvY2hlID09IDEgJiBib2R5Mi5JblJvY2hlID09IDE7DQoJCQkJCQkJaWYgKGZsYWc1KQ0KCQkJCQkJCXsNCgkJCQkJCQkJYm9vbCBmbGFnNiA9IGJvZHkuRGVuc2l0eSA+IDAuMGYgJiYgYm9keTIuRGVuc2l0eSA+IDAuMGY7DQoJCQkJCQkJCWlmIChmbGFnNikNCgkJCQkJCQkJew0KCQkJCQkJCQkJYm9vbCBmbGFnNyA9IG51bTE0IDwgbnVtNjsNCgkJCQkJCQkJCWlmIChmbGFnNykNCgkJCQkJCQkJCXsNCgkJCQkJCQkJCQludW0xNCA9IG51bTY7DQoJCQkJCQkJCQkJbnVtMTUgPSAoZmxvYXQpc3FydCgoZG91YmxlKW51bTE0KTsNCgkJCQkJCQkJCX0NCgkJCQkJCQkJCWZsb2F0IG51bTIxID0gYm9keTIuTWFzcyAqIChib2R5LlByZXNzdXJlICsgYm9keTIuUHJlc3N1cmUpIC8gKDIuMGYgKiBib2R5Mi5EZW5zaXR5KTsNCgkJCQkJCQkJCWZsb2F0IG51bTIyID0gLW51bTggKiAzLjBmICogKHNpemUgLSBudW0xNSkgKiAoc2l6ZSAtIG51bTE1KSAvIG51bTE1Ow0KCQkJCQkJCQkJZmxvYXQgbnVtMjMgPSBudW0xMiAqIG51bTIyOw0KCQkJCQkJCQkJZmxvYXQgbnVtMjQgPSBudW0xMyAqIG51bTIyOw0KCQkJCQkJCQkJbnVtMjMgKj0gbnVtMjE7DQoJCQkJCQkJCQludW0yNCAqPSBudW0yMTsNCgkJCQkJCQkJCWJvZHkuRm9yY2VYICs9IG51bTIzOw0KCQkJCQkJCQkJYm9keS5Gb3JjZVkgKz0gbnVtMjQ7DQoJCQkJCQkJCQlmbG9hdCBudW0yNSA9IG51bTExICogKDYuMGYgLyBudW0xMCkgKiAoc2l6ZSAtIG51bTE1KTsNCgkJCQkJCQkJCWZsb2F0IG51bTI2ID0gYm9keS5NYXNzICogbnVtMjUgKiB2aXNjb3NpdHkgKiAyLjBmIC8gNDAuMGY7DQoJCQkJCQkJCQlmbG9hdCBudW0yNyA9IGJvZHkuU3BlZWRYIC0gYm9keTIuU3BlZWRYOw0KCQkJCQkJCQkJZmxvYXQgbnVtMjggPSBib2R5LlNwZWVkWSAtIGJvZHkyLlNwZWVkWTsNCgkJCQkJCQkJCW51bTI3ICo9IG51bTI2Ow0KCQkJCQkJCQkJbnVtMjggKj0gbnVtMjY7DQoJCQkJCQkJCQlib2R5LkZvcmNlWCAtPSBudW0yNzsNCgkJCQkJCQkJCWJvZHkuRm9yY2VZIC09IG51bTI4Ow0KCQkJCQkJCQl9DQoJCQkJCQkJfQ0KCQkJCQkJCWVsc2UNCgkJCQkJCQl7DQoJCQkJCQkJCWJvb2wgZmxhZzggPSBib2R5LkluUm9jaGUgPT0gMSAmIGJvZHkyLkluUm9jaGUgPT0gMDsNCgkJCQkJCQkJaWYgKGZsYWc4KQ0KCQkJCQkJCQl7DQoJCQkJCQkJCQlib2R5LlZpc2libGUgPSAwOw0KCQkJCQkJCQl9DQoJCQkJCQkJCWVsc2UNCgkJCQkJCQkJew0KCQkJCQkJCQkJYm9vbCBmbGFnOSA9IGJvZHkuTWFzcyA+IGJvZHkyLk1hc3M7DQoJCQkJCQkJCQlpZiAoZmxhZzkpDQoJCQkJCQkJCQl7DQoJCQkJCQkJCQkJYm9keSA9IENvbGxpZGVCb2RpZXMoYm9keSwgYm9keTIsIGRWLCBudW0xNiwgbnVtMTcpOw0KCQkJCQkJCQkJfQ0KCQkJCQkJCQkJZWxzZQ0KCQkJCQkJCQkJew0KCQkJCQkJCQkJCWJvb2wgZmxhZzEwID0gYm9keS5NYXNzID09IGJvZHkyLk1hc3M7DQoJCQkJCQkJCQkJaWYgKGZsYWcxMCkNCgkJCQkJCQkJCQl7DQoJCQkJCQkJCQkJCWJvb2wgZmxhZzExID0gYm9keS5VSUQgPiBib2R5Mi5VSUQ7DQoJCQkJCQkJCQkJCWlmIChmbGFnMTEpDQoJCQkJCQkJCQkJCXsNCgkJCQkJCQkJCQkJCWJvZHkgPSBDb2xsaWRlQm9kaWVzKGJvZHksIGJvZHkyLCBkViwgbnVtMTYsIG51bTE3KTsNCgkJCQkJCQkJCQkJfQ0KCQkJCQkJCQkJCQllbHNlDQoJCQkJCQkJCQkJCXsNCgkJCQkJCQkJCQkJCWJvZHkuVmlzaWJsZSA9IDA7DQoJCQkJCQkJCQkJCX0NCgkJCQkJCQkJCQl9DQoJCQkJCQkJCQkJZWxzZQ0KCQkJCQkJCQkJCXsNCgkJCQkJCQkJCQkJYm9keS5WaXNpYmxlID0gMDsNCgkJCQkJCQkJCQl9DQoJCQkJCQkJCQl9DQoJCQkJCQkJCX0NCgkJCQkJCQl9DQoJCQkJCQl9DQoJCQkJCQllbHNlDQoJCQkJCQl7DQoJCQkJCQkJYm9vbCBmbGFnMTIgPSBib2R5Lk1hc3MgPiBib2R5Mi5NYXNzOw0KCQkJCQkJCWlmIChmbGFnMTIpDQoJCQkJCQkJew0KCQkJCQkJCQlmbG9hdCBudW0yOSA9IDMuMTQxNTkzZiAqIChmbG9hdClwb3coKGRvdWJsZSlib2R5LlNpemUsIDIuMCk7DQoJCQkJCQkJCWZsb2F0IG51bTMwID0gMy4xNDE1OTNmICogKGZsb2F0KXBvdygoZG91YmxlKWJvZHkyLlNpemUsIDIuMCk7DQoJCQkJCQkJCW51bTI5ICs9IG51bTMwOw0KCQkJCQkJCQlib2R5LlNpemUgPSAoZmxvYXQpc3FydCgoZG91YmxlKW51bTI5IC8gMy4xNDE1OTI2NTM1ODk3OSk7DQoJCQkJCQkJCWJvZHkuTWFzcyArPSBib2R5Mi5NYXNzOw0KCQkJCQkJCX0NCgkJCQkJCQllbHNlDQoJCQkJCQkJew0KCQkJCQkJCQlib2R5LlZpc2libGUgPSAwOw0KCQkJCQkJCX0NCgkJCQkJCX0NCgkJCQkJfQ0KCQkJCX0NCgkJCX0NCgkJfQ0KCQliYXJyaWVyKENMS19MT0NBTF9NRU1fRkVOQ0UpOw0KCX0NCglib2R5LlNwZWVkWCArPSBkdCAqIGJvZHkuRm9yY2VYIC8gYm9keS5NYXNzOw0KCWJvZHkuU3BlZWRZICs9IGR0ICogYm9keS5Gb3JjZVkgLyBib2R5Lk1hc3M7DQoJYm9keS5Mb2NYICs9IGR0ICogYm9keS5TcGVlZFg7DQoJYm9keS5Mb2NZICs9IGR0ICogYm9keS5TcGVlZFk7DQoJb3V0Qm9kaWVzWyhudW0pXSA9IGJvZHk7DQp9DQovLyBOQm9kaWVzLlBoeXNpY3MuQ1VEQUZsb2F0DQogIHN0cnVjdCBCb2R5IENvbGxpZGVCb2RpZXMoc3RydWN0IEJvZHkgbWFzdGVyLCBzdHJ1Y3QgQm9keSBzbGF2ZSwgZmxvYXQgZFYsIGZsb2F0IHZlY1gsIGZsb2F0IHZlY1kpDQp7DQoJc3RydWN0IEJvZHkgYm9keSA9IG1hc3RlcjsNCglib2R5LlNwZWVkWCArPSBkViAqIHZlY1g7DQoJYm9keS5TcGVlZFkgKz0gZFYgKiB2ZWNZOw0KCWZsb2F0IG51bSA9IDMuMTQxNTkzZiAqIChmbG9hdClwb3coKGRvdWJsZSlib2R5LlNpemUsIDIuMCk7DQoJZmxvYXQgbnVtMiA9IDMuMTQxNTkzZiAqIChmbG9hdClwb3coKGRvdWJsZSlzbGF2ZS5TaXplLCAyLjApOw0KCWZsb2F0IG51bTMgPSBudW0gKyBudW0yOw0KCWJvZHkuU2l6ZSA9IChmbG9hdClzcXJ0KChkb3VibGUpbnVtMyAvIDMuMTQxNTkyNjUzNTg5NzkpOw0KCWJvZHkuTWFzcyArPSBzbGF2ZS5NYXNzOw0KCXJldHVybiBib2R5Ow0KfQ0K</SourceCodeFile>
  </SourceCodes>
  <Functions>
    <CudafyKernelMethod Name="CalcForce" Type="Global" IsDummy="false" DummyBehaviour="Default">
      <Type>NBodies.Physics.CUDAFloat</Type>
      <Assembly>NBodies, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>NBodies</AssemblyName>
      <AssemblyPath>C:\GitHub\NBodies\NBodies\bin\Debug\NBodies.exe</AssemblyPath>
      <Checksum>3602783968</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="gpThread" Position="0" />
        <Parameter Type="NBodies.Physics.Body[]" Name="inBodies" Position="1" />
        <Parameter Type="NBodies.Physics.Body[]" Name="outBodies" Position="2" />
        <Parameter Type="System.Single" Name="dt" Position="3" />
      </Parameters>
    </CudafyKernelMethod>
    <CudafyKernelMethod Name="CalcCollisions" Type="Global" IsDummy="false" DummyBehaviour="Default">
      <Type>NBodies.Physics.CUDAFloat</Type>
      <Assembly>NBodies, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>NBodies</AssemblyName>
      <AssemblyPath>C:\GitHub\NBodies\NBodies\bin\Debug\NBodies.exe</AssemblyPath>
      <Checksum>3602783968</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="gpThread" Position="0" />
        <Parameter Type="NBodies.Physics.Body[]" Name="inBodies" Position="1" />
        <Parameter Type="NBodies.Physics.Body[]" Name="outBodies" Position="2" />
        <Parameter Type="System.Single" Name="dt" Position="3" />
        <Parameter Type="System.Single" Name="viscosity" Position="4" />
      </Parameters>
    </CudafyKernelMethod>
    <CudafyKernelMethod Name="CollideBodies" Type="Device" IsDummy="false" DummyBehaviour="Default">
      <Type>NBodies.Physics.CUDAFloat</Type>
      <Assembly>NBodies, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>NBodies</AssemblyName>
      <AssemblyPath>C:\GitHub\NBodies\NBodies\bin\Debug\NBodies.exe</AssemblyPath>
      <Checksum>3602783968</Checksum>
      <Parameters>
        <ReturnType>NBodies.Physics.Body</ReturnType>
        <Parameter Type="NBodies.Physics.Body" Name="master" Position="0" />
        <Parameter Type="NBodies.Physics.Body" Name="slave" Position="1" />
        <Parameter Type="System.Single" Name="dV" Position="2" />
        <Parameter Type="System.Single" Name="vecX" Position="3" />
        <Parameter Type="System.Single" Name="vecY" Position="4" />
      </Parameters>
    </CudafyKernelMethod>
  </Functions>
  <Constants />
  <Types>
    <CudafyType Name="Body" IsDummy="false" DummyBehaviour="Default">
      <Type>NBodies.Physics.Body</Type>
      <Assembly>NBodies, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>NBodies</AssemblyName>
      <AssemblyPath>C:\GitHub\NBodies\NBodies\bin\Debug\NBodies.exe</AssemblyPath>
      <Checksum>3602783968</Checksum>
    </CudafyType>
  </Types>
</CudafyModule>